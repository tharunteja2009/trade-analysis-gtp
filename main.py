from ai.agents.trade_analysis_agent import get_trade_analyst_agent
from autogen_agentchat.messages import TextMessage
import asyncio


async def main():
    model_strategy = "deapth-analysis"  # Using depth-analysis for better results
    agent = get_trade_analyst_agent(model_strategy)
    stock_name = input("Enter stock name or symbol for analysis : ")

    # Two-step approach needed due to AutoGen framework behavior
    # Step 1: Get the stock data
    data_result = await agent.run(
        task=f"Use get_full_stock_info tool to fetch data for {stock_name}"
    )

    # Step 2: Ask for analysis based on the data
    analysis_result = await agent.run(
        task=f"""Based on the stock data you just retrieved for {stock_name}, provide this analysis:

## Stock Analysis: {stock_name.upper()}

**Current Price & Trend:** [Analysis of current price vs 52-week range]
**Valuation Metrics:** [P/E, P/B analysis] 
**Financial Health:** [Revenue, margins, cash flow assessment]
**Final Recommendation:** BUY/SELL/HOLD
**Reasoning:** [2-3 sentences explaining recommendation]

Provide the complete analysis now."""
    )

    # Extract and print only the final agent response content
    final_response = None
    for message in reversed(analysis_result.messages):
        if isinstance(message, TextMessage) and message.source != "user":
            final_response = message.content
            break

    if final_response:
        print(final_response)
    else:
        print("No final analysis generated by agent.")


if __name__ == "__main__":
    asyncio.run(main())
